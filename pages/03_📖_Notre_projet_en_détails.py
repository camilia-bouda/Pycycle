import streamlit as st
import pandas as pd
import gdown
import plotly.express as px
from streamlit_plotly_mapbox_events import plotly_mapbox_events
from PIL import Image

st.set_page_config(page_title = "Pycycle", layout="wide", initial_sidebar_state="collapsed", page_icon = ":bicyclist:")

header = st.container()


with header:
    
    @st.cache(allow_output_mutation=True)
    def gdown_csv(url, separateur=";", index_colonne=0):
        url = 'https://drive.google.com/uc?id=' + url.split('/')[-2]
        output = "file.csv"
        gdown.download(url, output, quiet=False) 
        df = pd.read_csv(output, sep=separateur, index_col=index_colonne)
        return df    

    
    
    c1, c2 = st.columns((1, 1.2))
    with c1:
        st.title("Construction des mod√®les")
        st.markdown("### Contexte du projet")
        st.write("Ces derni√®res ann√©es, la politique cyclable de la mairie de Paris s'est montr√©e tr√®s ambitieuse, \
                        notamment √† travers le projet lanc√© en 2021 de rendre Paris 100% cyclable en 5 ans. \
                        \n De nombreux travaux sont entrepris dans la capitale afin de cr√©er des pistes cyclables, provoquant \
                        une augmentation du trafic cycliste chaque ann√©e, lui qui a notamment explos√© en 2020 avec le coronavirus \
                                (*voir Pycycle > :rocket: Exploration des donn√©es*).\n")
        st.write("\n L‚Äôobjectif de ce projet est de pr√©dire le trafic cycliste √† Paris\
                √† partir de donn√©es issues de compteurs √† v√©los situ√©s un peu\
                partout √† Paris.\n\
                Plus pr√©cis√©ment, on cherche √† pr√©dire le nombre de v√©los circulant\
                comptabilis√© soit pour une agr√©gation de tous les compteurs\
                (trafic g√©n√©ral dans Paris), soit pour chacun des compteurs\
                (localis√© g√©ographiquement) sur une p√©riode de temps d√©finie.")
    with c2:
        plan_velos = Image.open("pages/Plan_V√©lo_2021_2026.jpeg")
        st.image(plan_velos, use_column_width=True, caption = "Le Plan V√©lo 2021-2026 de la Mairie de Paris")
    
    st.markdown('### Jeu de donn√©es initial')
    st.write("Le dataset original sur lequel est bas√© notre projet est issu\
            de l‚Äô[Open Data de la Mairie de Paris](https://opendata.paris.fr/explore/dataset/comptage-velo-donnees-compteurs/information/?disjunctive.id_compteur&disjunctive.nom_compteur&disjunctive.id&disjunctive.name)\
            et pr√©sente des donn√©es de comptages horaires du trafic cycliste\
            sur 13 mois glissants. La structure des donn√©es est la suivante :")
            
    dict = {
    "Champs" : ["Identifiant du compteur", "Nom du compteur : donn√©es compl√®tes comportant l‚Äôadresse postale et le sens de comptage",\
        "Identifiant du site de comptage", "Nom du site de comptage", "Comptage horaire : le volume de cycliste en une heure --‚Üí variable cible",\
        "Date et heure de comptage : donn√©es compl√®tes comporte la date et l‚Äôheure du comptage horaire", "Date d'installation du site de comptage",\
        "Lien vers photo du site de comptage", "Coordonn√©es g√©ographiques : coordonn√©es au format GPS du compteur", "Identifiant technique compteur"],
    "Exemple" : ["100003096-353242251", "97 avenue Denfert Rochereau SO-NE", "100003096", "97 avenue Denfert Rochereau","8", "2022-02-18T01:00:00+01:00",\
        "2012-02-22", "https://filer.eco-counter-tools.com/file/51/8c9a267316dba09ef0d3f3a3291f96b5236120d92040a9e8687dd5f9609b1251/X2H20012081_20210810112520.jpg",\
        "48.83511,2.33338", "X2H20012081"]
}

    df_format_data = pd.DataFrame(dict)
    st.table(df_format_data)
            
    st.write("Nous avons √©galement r√©cup√©r√© les donn√©es des ann√©es pr√©c√©dentes\
            jusqu'en 2018 √©galement disponible sur l‚ÄôOpen Data de la Mairie de Paris.\
            Le jeu de donn√©es est alors compos√© d‚Äôenviron _2 500 000 lignes_.")
    
    st.markdown('### S√©lection des compteurs')
    df_compteurs_selection = gdown_csv("https://drive.google.com/file/d/1wJvqoWAaCG4x-UDNPppiva47vnsQnV0F/view?usp=sharing")
    df_compteurs_all = gdown_csv("https://drive.google.com/file/d/1JQOWtGU12_70PQcs0ayBgYs0-qPbZNqZ/view?usp=sharing")
    df_compteurs_all = df_compteurs_all.merge(df_compteurs_selection, how="outer")
    df_compteurs_all.loc[df_compteurs_all["id compteur"].notnull(),"selection"] = "Selectionn√©s"
    df_compteurs_all.loc[df_compteurs_all["id compteur"].isna(),"selection"] = "Ecart√©s"
    df_compteurs_all["size"]=5
    
    token = "pk.eyJ1IjoiY2FtaWxpYWIiLCJhIjoiY2w3a284am1uMDg5ejNvdDV6cWNzdTFsaSJ9.7nOYlVU0P_oLhl-7BnIu6Q"

    st.write("Le dataset original (sur l‚Äôann√©e 2021) permet d‚Äôidentifier pr√®s d'une centaine\
            compteurs dans Paris. N√©anmoins, certains compteurs ont √©t√© enlev√©s,\
            ajout√©s ou remplac√©s au fil du temps depuis 2019. Afin d‚Äôavoir des\
            observations coh√©rentes au fil du temps, il est n√©cessaire de\
            ne conserver que les compteurs pr√©sents en 2019 et toujours pr√©sents\
            aujourd‚Äôhui.")
    st.write("Nous avons donc appliqu√© un filtre pour ne retenir que les capteurs remplissant cette condition:")

    fig = px.scatter_mapbox(df_compteurs_all, 
                            lat="Lat",
                            lon="Long", 
                            size="size",
                            color="selection",
                            hover_name = "Nom du compteur",
                            size_max=10,
                            zoom=11)

    fig.update_layout(mapbox_style="light", mapbox_accesstoken=token)
    fig.update_layout(margin={"r":0,"t":0,"l":0,"b":0})
    fig.update_layout(height = 400)
    fig.update_coloraxes(showscale=False)

    mapbox_events = plotly_mapbox_events(
                                        fig,
                                        click_event=True,
                                        select_event=False,
                                        hover_event=False,
                                        relayout_event=False,
                                        override_width = "100%",
                                        key = 'selected_bike_meter')
    
    st.markdown('### Enrichissement des donn√©es')
    
    st.markdown("**Les donn√©es initiales permettent de renseigner les comptages en fonction :**")
    st.markdown("- De la temporalit√© connu avec l'horodatage du comptage (jour de la semaine, mois, ann√©e)")
    st.markdown("- De la g√©ographie avec la position des compteurs (coordonn√©es GPS) et la direction du comptage")
    st.markdown("")
    st.markdown("\n  ")
    st.markdown("**Le trafic cycliste est √©galement influenc√© par d'autres facteurs que nous avons int√©gr√©s au jeu de donn√©e :**")
    st.markdown("- Un contexte calendaire : vacances scolaires, jours f√©ri√©s r√©cup√©r√©s sur l'[Open Data du minist√®re de l'Education Nationale](https://data.education.gouv.fr/explore/dataset/fr-en-calendrier-scolaire/information/?disjunctive.description&disjunctive.population&disjunctive.location&disjunctive.zones&disjunctive.annee_scolaire&sort=end_date&calendarview=month)")
    st.markdown("- Des √©v√®nements particuliers : confinement (ajout manuel du 17/03/2020 au 10/05/2020), Gr√®ve importante des transports publics (ajout manuel pour le mois de d√©cembre 2019)")
    st.markdown("- La m√©t√©o : opinion m√©t√©o de la journ√©e, temp√©rature moyenne, pr√©cipitation r√©cup√©r√©s en [Open Data](https://www.historique-meteo.net/france/ile-de-france/paris/)")
    st.markdown("- Des am√©nagements cyclables autour de chaque compteur, dont la longueur cumul√©e des pistes cyclables dans un rayon d'environ 1 km a √©t√© calcul√©e √† partir des donn√©es de l'[Open Data de la Ville de Paris](https://opendata.paris.fr/explore/dataset/reseau-cyclable/information/?disjunctive.typologie_simple&disjunctive.bidirectionnel&disjunctive.statut&disjunctive.sens_velo&disjunctive.voie&disjunctive.arrdt&disjunctive.bois&disjunctive.position&disjunctive.circulation&disjunctive.piste&disjunctive.couloir_bus&disjunctive.type_continuite&disjunctive.reseau)")
    st.markdown("- Des Points d'Int√©r√™t (mus√©e, sites touristiques,...) autour de chaque compteur r√©cup√©r√©s sur l'[Open Data de la R√©gion Ile-de-France](https://data.iledefrance.fr/explore/dataset/principaux-sites-touristiques-en-ile-de-france0/information/)")
    st.markdown("\n")
    st.info("""Nous avons √©galement introduit une notion d'**historique** en r√©cup√©rant le comptage horaire des p√©riodes pr√©c√©dentes. 
    Cet enrichissement des donn√©es a fortement am√©lior√© les performances de l'ensemble des mod√®les test√©s (_voir partie suivante_).  
    \n On peut donc en d√©duire que **l'√©tat du trafic cycliste √† un instant T d√©pend principalement de l'√©tat du trafic aux instants pr√©c√©dents**.""", icon='üí°')
    st.markdown("\n")
    
    st.markdown('### Les diff√©rents mod√®les test√©s')
    
    st.write("Dans un premier temps, nous nous sommes concentr√©s\
            sur la pr√©diction du trafic des v√©los √† une √©chelle agr√©g√©e pour\
            tous les compteurs (trafic g√©n√©ral dans Paris, sans distinction g√©ographique).")
    st.write("Dans un second temps, nous avons commenc√© √† construire des\
            mod√©lisations afin de r√©aliser une pr√©diction du trafic des v√©los par capteur (localis√©\
            g√©ographiquement) sur une p√©riode de temps d√©finie.")
    st.write("Diff√©rents mod√®les de r√©gression ont √©t√© test√©s et enrichis par it√©ration\
            ainsi que des mod√®les de classification.\
            Finalement, ce sont les mod√®les de r√©gression **Random Forest** avec lesquels nous avons obtenu\
            les meilleurs r√©sultats.")
    schema_modeles = Image.open("pages/shema_evolution_modelisation.png")
    st.image(schema_modeles, use_column_width=True)
    

    st.markdown('### Bilan & Perspectives')
    st.markdown("""La prise en compte de l‚Äôhistorique du comptage associ√© au mod√®le de Random Forest donnent des r√©sultats plut√¥t bons avec un $r^2$ \
        aux alentours de 0.92 pour le mod√®le global et le mod√®le par tranche horaire et capteur.""")
    st.markdown("Cependant nous avons √©t√© limit√©s par un manque de puissance de calcul mais √©galement une instabilit√© des compteurs au fil des ann√©es. ")
    st.markdown("Afin d‚Äôam√©liorer notre projet, il serait pertinent de mettre en place une pipeline de r√©cup√©ration des donn√©es pour avoir les donn√©es \
        les plus r√©centes possibles. En effet, comme vu pr√©cedemment, la pr√©diction du trafic cycliste √† un instant T d√©pend √©norm√©ment du trafic aux instants \
        pr√©c√©dents. La mise en place d‚Äôune base de donn√©es serait √©galement un plus pour mieux g√©rer la volum√©trie des donn√©es \
        (pr√®s de *3 000 000 lignes*). ")
    st.markdown("Enfin, une puissance de calcul plus importante (via un abonnement cloud par exemple) nous permettrait de \
        construire un mod√®le horaire par capteurs.")
